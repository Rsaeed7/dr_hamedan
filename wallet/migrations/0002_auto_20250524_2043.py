# Generated by Django 5.2 on 2025-05-24 20:43

import django.core.validators
import django.db.models.deletion
import django_jalali.db.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


def create_wallets_for_existing_users(apps, schema_editor):
    """Create wallets for all existing users who have transactions"""
    Transaction = apps.get_model('wallet', 'Transaction')
    Wallet = apps.get_model('wallet', 'Wallet')
    User = apps.get_model('user', 'User')
    
    # Get all users who have transactions
    user_ids = Transaction.objects.values_list('user_id', flat=True).distinct()
    
    for user_id in user_ids:
        try:
            user = User.objects.get(id=user_id)
            wallet, created = Wallet.objects.get_or_create(
                user=user,
                defaults={
                    'balance': Decimal('0.00'),
                    'pending_balance': Decimal('0.00'),
                    'frozen_balance': Decimal('0.00'),
                    'is_active': True,
                }
            )
            if created:
                print(f"Created wallet for user {user.phone}")
        except User.DoesNotExist:
            print(f"User with id {user_id} not found")


def reverse_create_wallets(apps, schema_editor):
    """Reverse the wallet creation"""
    Wallet = apps.get_model('wallet', 'Wallet')
    Wallet.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('wallet', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # First, create PaymentGateway model
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام درگاه')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='کد درگاه')),
                ('api_key', models.CharField(max_length=200, verbose_name='کلید API')),
                ('merchant_id', models.CharField(max_length=100, verbose_name='شناسه پذیرنده')),
                ('gateway_url', models.URLField(verbose_name='آدرس درگاه')),
                ('verify_url', models.URLField(verbose_name='آدرس تایید')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('1000'), max_digits=10, verbose_name='حداقل مبلغ')),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('50000000'), max_digits=12, verbose_name='حداکثر مبلغ')),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='درصد کمیسیون')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
            ],
            options={
                'verbose_name': 'درگاه پرداخت',
                'verbose_name_plural': 'درگاه‌های پرداخت',
            },
        ),
        
        # Create Wallet model
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='موجودی')),
                ('pending_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='موجودی در انتظار')),
                ('frozen_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='موجودی مسدود')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'کیف پول',
                'verbose_name_plural': 'کیف‌ پول‌ها',
                'ordering': ['-created_at'],
            },
        ),
        
        # Create wallets for existing users
        migrations.RunPython(create_wallets_for_existing_users, reverse_create_wallets),
        
        # Add new fields to Transaction model
        migrations.AddField(
            model_name='transaction',
            name='authority',
            field=models.CharField(blank=True, max_length=100, verbose_name='کد Authority'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='commission_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='مبلغ کمیسیون'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='expires_at',
            field=django_jalali.db.models.jDateTimeField(blank=True, null=True, verbose_name='تاریخ انقضا'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='fee_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='هزینه تراکنش'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, verbose_name='اطلاعات اضافی'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='net_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='مبلغ خالص'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='payment_method',
            field=models.CharField(choices=[('gateway', 'درگاه پرداخت'), ('wallet', 'کیف پول'), ('card', 'کارت بانکی'), ('cash', 'نقدی'), ('transfer', 'انتقال بانکی')], default='gateway', max_length=20, verbose_name='روش پرداخت'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='processed_at',
            field=django_jalali.db.models.jDateTimeField(blank=True, null=True, verbose_name='تاریخ پردازش'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='reference_id',
            field=models.CharField(blank=True, max_length=100, verbose_name='شماره مرجع'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='tracking_code',
            field=models.CharField(blank=True, max_length=100, verbose_name='کد پیگیری'),
        ),
        
        # Add foreign key to PaymentGateway
        migrations.AddField(
            model_name='transaction',
            name='gateway',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wallet.paymentgateway', verbose_name='درگاه پرداخت'),
        ),
        
        # Add foreign key to Wallet (nullable first)
        migrations.AddField(
            model_name='transaction',
            name='wallet',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='wallet.wallet', verbose_name='کیف پول'),
        ),
        
        # Update existing transactions to link to wallets
        migrations.RunPython(
            lambda apps, schema_editor: None,  # We'll handle this in the next step
            lambda apps, schema_editor: None
        ),
        
        # Alter existing fields
        migrations.AlterModelOptions(
            name='transaction',
            options={'ordering': ['-created_at'], 'verbose_name': 'تراکنش', 'verbose_name_plural': 'تراکنش‌ها'},
        ),
        migrations.AlterField(
            model_name='transaction',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=12, verbose_name='مبلغ'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='created_at',
            field=django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='description',
            field=models.TextField(blank=True, verbose_name='توضیحات'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='status',
            field=models.CharField(choices=[('pending', 'در انتظار'), ('processing', 'در حال پردازش'), ('completed', 'تکمیل شده'), ('failed', 'ناموفق'), ('cancelled', 'لغو شده'), ('expired', 'منقضی شده')], default='pending', max_length=20, verbose_name='وضعیت'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=models.CharField(choices=[('payment', 'پرداخت'), ('refund', 'بازگشت وجه'), ('deposit', 'واریز'), ('withdrawal', 'برداشت'), ('commission', 'کمیسیون'), ('penalty', 'جریمه'), ('bonus', 'پاداش'), ('transfer', 'انتقال')], max_length=20, verbose_name='نوع تراکنش'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='updated_at',
            field=django_jalali.db.models.jDateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی'),
        ),
        
        # Add indexes
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'status'], name='wallet_tran_user_id_9b1f68_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_id'], name='wallet_tran_referen_8e94e0_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['tracking_code'], name='wallet_tran_trackin_dc2c7b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='wallet_tran_created_fb97c1_idx'),
        ),
    ]
