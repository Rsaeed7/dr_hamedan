# Generated by Django 5.2 on 2025-07-11 13:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='doctoravailability',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='doctors.doctor', verbose_name='پزشک'),
        ),
        migrations.AddField(
            model_name='doctorblockedday',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_days', to='doctors.doctor', verbose_name='پزشک'),
        ),
        migrations.AddField(
            model_name='doctorregistration',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.city', verbose_name='شهر محل خدمت'),
        ),
        migrations.AddField(
            model_name='doctorregistration',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_doctor_registrations', to=settings.AUTH_USER_MODEL, verbose_name='بررسی شده توسط'),
        ),
        migrations.AddField(
            model_name='drcomment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='doctors.doctor', verbose_name='پزشک'),
        ),
        migrations.AddField(
            model_name='drcomment',
            name='tips',
            field=models.ManyToManyField(blank=True, null=True, related_name='comment_tips', to='doctors.commenttips', verbose_name='نکات مثبت و منفی'),
        ),
        migrations.AddField(
            model_name='drcomment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_comments', to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='drservices',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='doctors.doctor', verbose_name='پزشک'),
        ),
        migrations.AddField(
            model_name='email',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='doctors.doctor', verbose_name='گیرنده'),
        ),
        migrations.AddField(
            model_name='email',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='doctors.doctor', verbose_name='فرستنده'),
        ),
        migrations.AddField(
            model_name='emailtemplate',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_templates', to='doctors.doctor'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='doctorregistration',
            name='specialization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.specialization', verbose_name='تخصص'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='specialization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.specialization', verbose_name='تخصص'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='Insurance',
            field=models.ManyToManyField(blank=True, null=True, to='doctors.supplementary_insurance', verbose_name='بیمه های تکمیلی طرف قرارداد'),
        ),
        migrations.AlterUniqueTogether(
            name='doctoravailability',
            unique_together={('doctor', 'day_of_week')},
        ),
        migrations.AlterUniqueTogether(
            name='doctorblockedday',
            unique_together={('doctor', 'date')},
        ),
        migrations.AddConstraint(
            model_name='email',
            constraint=models.CheckConstraint(condition=models.Q(('sender', models.F('recipient')), _negated=True), name='prevent_self_message'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='doctors_not_user_id_07951f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='doctors_not_notific_3dfd11_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'created_at'], name='doctors_not_priorit_9bae1a_idx'),
        ),
    ]
